(()=>{var e={743:e=>{function a(e){this.key=e,this.parent=null,this.children={},this.end=!1}function o(){this.root=new a(null)}function r(e,a){for(var o in e.end&&a.unshift(e.getWord()),e.children)r(e.children[o],a)}a.prototype.getWord=function(){for(var e=[],a=this;null!==a;)e.unshift(a.key),a=a.parent;return e.join("")},o.prototype.insert=function(e){for(var o=this.root,r=0;r<e.length;r++)o.children[e[r]]||(o.children[e[r]]=new a(e[r]),o.children[e[r]].parent=o),o=o.children[e[r]],r==e.length-1&&(o.end=!0)},o.prototype.contains=function(e){for(var a=this.root,o=0;o<e.length;o++){if(!a.children[e[o]])return!1;a=a.children[e[o]]}return a.end},o.prototype.find=function(e){for(var a=this.root,o=[],i=0;i<e.length;i++){if(!a.children[e[i]])return o;a=a.children[e[i]]}return r(a,o),o};const i=["bulbasaur","ivysaur","venusaur","charmander","charmeleon","charizard","squirtle","wartortle","blastoise","caterpie","metapod","butterfree","weedle","kakuna","beedrill","pidgey","pidgeotto","pidgeot","rattata","raticate","spearow","fearow","ekans","arbok","pikachu","raichu","sandshrew","sandslash","nidoran female","nidorina","nidoqueen","nidoran male","nidorino","nidoking","clefairy","clefable","vulpix","ninetales","jigglypuff","wigglytuff","zubat","golbat","oddish","gloom","vileplume","paras","parasect","venonat","venomoth","diglett","dugtrio","meowth","persian","psyduck","golduck","mankey","primeape","growlithe","arcanine","poliwag","poliwhirl","poliwrath","abra","kadabra","alakazam","machop","machoke","machamp","bellsprout","weepinbell","victreebel","tentacool","tentacruel","geodude","graveler","golem","ponyta","rapidash","slowpoke","slowbro","magnemite","magneton","farfetch'd","doduo","dodrio","seel","dewgong","grimer","muk","shellder","cloyster","gastly","haunter","gengar","onix","drowzee","hypno","krabby","kingler","voltorb","electrode","exeggcute","exeggutor","cubone","marowak","hitmonlee","hitmonchan","lickitung","koffing","weezing","rhyhorn","rhydon","chansey","tangela","kangaskhan","horsea","seadra","goldeen","seaking","staryu","starmie","mr.mime","scyther","jynx","electabuzz","magmar","pinsir","tauros","magikarp","gyarados","lapras","ditto","eevee","vaporeon","jolteon","flareon","porygon","omanyte","omastar","kabuto","kabutops","aerodactyl","snorlax","articuno","zapdos","moltres","dratini","dragonair","dragonite","mewtwo","mew","chikorita","bayleef","meganium","cyndaquil","quilava","typhlosion","totodile","croconaw","feraligatr","sentret","furret","hoothoot","noctowl","ledyba","ledian","spinarak","ariados","crobat","chinchou","lanturn","pichu","cleffa","igglybuff","togepi","togetic","natu","xatu","mareep","flaaffy","ampharos","bellossom","marill","azumarill","sudowoodo","politoed","hoppip","skiploom","jumpluff","aipom","sunkern","sunflora","yanma","wooper","quagsire","espeon","umbreon","murkrow","slowking","misdreavus","unown","wobbuffet","girafarig","pineco","forretress","dunsparce","gligar","steelix","snubbull","granbull","qwilfish","scizor","shuckle","heracross","sneasel","teddiursa","ursaring","slugma","magcargo","swinub","piloswine","corsola","remoraid","octillery","delibird","mantine","skarmory","houndour","houndoom","kingdra","phanpy","donphan","porygon2","stantler","smeargle","tyrogue","hitmontop","smoochum","elekid","magby","miltank","blissey","raikou","entei","suicune","larvitar","pupitar","tyranitar","lugia","ho-oh","celebi","treecko","grovyle","sceptile","torchic","combusken","blaziken","mudkip","marshtomp","swampert","poochyena","mightyena","zigzagoon","linoone","wurmple","silcoon","beautifly","cascoon","dustox","lotad","lombre","ludicolo","seedot","nuzleaf","shiftry","taillow","swellow","wingull","pelipper","ralts","kirlia","gardevoir","surskit","masquerain","shroomish","breloom","slakoth","vigoroth","slaking","nincada","ninjask","shedinja","whismur","loudred","exploud","makuhita","hariyama","azurill","nosepass","skitty","delcatty","sableye","mawile","aron","lairon","aggron","meditite","medicham","electrike","manectric","plusle","minun","volbeat","illumise","roselia","gulpin","swalot","carvanha","sharpedo","wailmer","wailord","numel","camerupt","torkoal","spoink","grumpig","spinda","trapinch","vibrava","flygon","cacnea","cacturne","swablu","altaria","zangoose","seviper","lunatone","solrock","barboach","whiscash","corphish","crawdaunt","baltoy","claydol","lileep","cradily","anorith","armaldo","feebas","milotic","castform","kecleon","shuppet","banette","duskull","dusclops","tropius","chimecho","absol","wynaut","snorunt","glalie","spheal","sealeo","walrein","clamperl","huntail","gorebyss","relicanth","luvdisc","bagon","shelgon","salamence","beldum","metang","metagross","regirock","regice","registeel","latias","latios","kyogre","groudon","rayquaza","jirachi","deoxys","turtwig","grotle","torterra","chimchar","monferno","infernape","piplup","prinplup","empoleon","starly","staravia","staraptor","bidoof","bibarel","kricketot","kricketune","shinx","luxio","luxray","budew","roserade","cranidos","rampardos","shieldon","bastiodon","burmy","wormadam","mothim","combee","vespiquen","pachirisu","buizel","floatzel","cherubi","cherrim","shellos","gastrodon","ambipom","drifloon","drifblim","buneary","lopunny","mismagius","honchkrow","glameow","purugly","chingling","stunky","skuntank","bronzor","bronzong","bonsly","mimejr.","happiny","chatot","spiritomb","gible","gabite","garchomp","munchlax","riolu","lucario","hippopotas","hippowdon","skorupi","drapion","croagunk","toxicroak","carnivine","finneon","lumineon","mantyke","snover","abomasnow","weavile","magnezone","lickilicky","rhyperior","tangrowth","electivire","magmortar","togekiss","yanmega","leafeon","glaceon","gliscor","mamoswine","porygon-z","gallade","probopass","dusknoir","froslass","rotom","uxie","mesprit","azelf","dialga","palkia","heatran","regigigas","giratina","cresselia","phione","manaphy","darkrai","shaymin","arceus","victini","snivy","servine","serperior","tepig","pignite","emboar","oshawott","dewott","samurott","patrat","watchog","lillipup","herdier","stoutland","purrloin","liepard","pansage","simisage","pansear","simisear","panpour","simipour","munna","musharna","pidove","tranquill","unfezant","blitzle","zebstrika","roggenrola","boldore","gigalith","woobat","swoobat","drilbur","excadrill","audino","timburr","gurdurr","conkeldurr","tympole","palpitoad","seismitoad","throh","sawk","sewaddle","swadloon","leavanny","venipede","whirlipede","scolipede","cottonee","whimsicott","petilil","lilligant","basculin","sandile","krokorok","krookodile","darumaka","darmanitan","maractus","dwebble","crustle","scraggy","scrafty","sigilyph","yamask","cofagrigus","tirtouga","carracosta","archen","archeops","trubbish","garbodor","zorua","zoroark","minccino","cinccino","gothita","gothorita","gothitelle","solosis","duosion","reuniclus","ducklett","swanna","vanillite","vanillish","vanilluxe","deerling","sawsbuck","emolga","karrablast","escavalier","foongus","amoonguss","frillish","jellicent","alomomola","joltik","galvantula","ferroseed","ferrothorn","klink","klang","klinklang","tynamo","eelektrik","eelektross","elgyem","beheeyem","litwick","lampent","chandelure","axew","fraxure","haxorus","cubchoo","beartic","cryogonal","shelmet","accelgor","stunfisk","mienfoo","mienshao","druddigon","golett","golurk","pawniard","bisharp","bouffalant","rufflet","braviary","vullaby","mandibuzz","heatmor","durant","deino","zweilous","hydreigon","larvesta","volcarona","cobalion","terrakion","virizion","tornadus","thundurus","reshiram","zekrom","landorus","kyurem","keldeo","meloetta","genesect","chespin","quilladin","chesnaught","fennekin","braixen","delphox","froakie","frogadier","greninja","bunnelby","diggersby","fletchling","fletchinder","talonflame","scatterbug","spewpa","vivillon","litleo","pyroar","flabebe","floette","florges","skiddo","gogoat","pancham","pangoro","furfrou","espurr","meowstic","honedge","doublade","aegislash","spritzee","aromatisse","swirlix","slurpuff","inkay","malamar","binacle","barbaracle","skrelp","dragalge","clauncher","clawitzer","helioptile","heliolisk","tyrunt","tyrantrum","amaura","aurorus","sylveon","hawlucha","dedenne","carbink","goomy","sliggoo","goodra","klefki","phantump","trevenant","pumpkaboo","gourgeist","bergmite","avalugg","noibat","noivern","xerneas","yveltal","zygarde","diancie","hoopa","volcanion","rowlet","dartrix","decidueye","litten","torracat","incineroar","popplio","brionne","primarina","pikipek","trumbeak","toucannon","yungoos","gumshoos","grubbin","charjabug","vikavolt","crabrawler","crabominable","oricorio-baile","cutiefly","ribombee","rockruff","lycanroc","wishiwashi","mareanie","toxapex","mudbray","mudsdale","dewpider","araquanid","fomantis","lurantis","morelull","shiinotic","salandit","salazzle","stufful","bewear","bounsweet","steenee","tsareena","comfey","oranguru","passimian","wimpod","golisopod","sandygast","palossand","pyukumuku","type:null","silvally","minior","komala","turtonator","togedemaru","mimikyu","bruxish","drampa","dhelmise","jangmo-o","hakamo-o","kommo-o","tapu koko","tapu lele","tapu bulu","tapu fini","cosmog","cosmoem","solgaleo","lunala","nihilego","buzzwole","pheromosa","xurkitree","celesteela","kartana","guzzlord","necrozma","magearna","marshadow","poipole","naganadel","stakataka","blacephalon","zeraora","meltan","melmetal","grookey","thwackey","rillaboom","scorbunny","raboot","cinderace","sobble","drizzile","inteleon","skwovet","greedent","rookidee","corvisquire","corviknight","blipbug","dottler","orbeetle","nickit","thievul","gossifleur","eldegoss","wooloo","dubwool","chewtle","drednaw","yamper","boltund","rolycoly","carkol","coalossal","applin","flapple","appletun","silicobra","sandaconda","cramorant","arrokuda","barraskewda","toxel","toxtricity","sizzlipede","centiskorch","clobbopus","grapploct","sinistea","polteageist","hatenna","hattrem","hatterene","impidimp","morgrem","grimmsnarl","obstagoon","perrserker","cursola","sirfetch'd","mr.rime","runerigus","milcery","alcremie","falinks","pincurchin","snom","frosmoth","stonjourner","eiscue","indeedee","morpeko","cufant","copperajah","dracozolt","arctozolt","dracovish","arctovish","duraludon","dreepy","drakloak","dragapult","zacian","zamazenta","eternatus","kubfu","urshifu","zarude"],t=new o;for(let e of i)t.insert(e);e.exports={pokeTrie:t,pokeNames:i}},347:e=>{e.exports={pokeTypes:{normal:"&#11093;",fighting:"&#128165;",flying:"&#129413;",poison:"&#129344;",ground:"&#9968",rock:"&#129521;",bug:"&#128027;",ghost:"&#128123;",steel:"&#9881;",fire:"&#128293;",water:"&#128167;",grass:"&#127808;",electric:"&#9889;",psychic:"&#128302;",ice:"&#10052",dragon:"&#129430;",dark:"&#129415;",fairy:"&#129498;"},pokeMap:{oricorio:"oricorio-baile",keldeo:"keldeo-ordinary","nidoran male":"nidoran-m","nidoran female":"nidoran-m","farfetch'd":"farfetchd","mr.mime":"mr-mime",deoxys:"deoxys-normal",wormadam:"wormadam-plant","mimejr.":"mime-jr",giratina:"giratina-altered",shaymin:"shaymin-land",basculin:"basculin-red-striped",darmanitan:"darmanitan-standard",tornadus:"tornadus-incarnate",thundurus:"thundurus-incarnate",landorus:"landorus-incarnate",meloetta:"meloetta-aria",meowstic:"meowstic-male",aegislash:"aegislash-shield",pumpkaboo:"pumpkaboo-average",gourgeist:"gourgeist-average",lycanroc:"lycanroc-midday",wishiwashi:"wishiwashi-solo","type:null":"type-null",minior:"minior-red-meteor",mimikyu:"mimikyu-disguised","tapu koko":"tapu-koko","tapu lele":"tapu-lele","tapu bulu":"tapu-bulu","tapu fini":"tapu-fini","sirfetch'd":"sirfetch","mr.rime":"mr"}}}},a={};function o(r){if(a[r])return a[r].exports;var i=a[r]={exports:{}};return e[r](i,i.exports,o),i.exports}(()=>{"use strict";var e=o(743),a=o(347);const r=e=>{let a=[];for(let o of e.evolution_details){const e=o.trigger.name;if("level-up"===e){if(o.min_level&&a.push("@ LVL"+o.min_level),o.min_happiness&&a.push(`@ ${o.min_happiness} happiness`),o.min_beauty&&a.push(`@ ${o.min_beauty} beauty`),o.min_affection&&a.push(`@ ${o.min_affection} affection`),o.time_of_day&&a.push("at "+o.time_of_day),null!==o.relative_physical_stats)switch(o.relative_physical_stats){case 1:a.push("w/ attack > defence");break;case-1:a.push("w/ attack < defence");break;default:a.push("w/ attack = defence")}o.needs_overworld_rain&&a.push("overworld rain"),o.party_species&&a.push("@ party with "+o.party_species.name),o.turn_upside_down&&a.push("w/ turn device upside-down"),o.location&&a.push(""+o.location.name)}if("use-item"===e&&o.item&&a.push("w/ "+o.item.name.toUpperCase()),"trade"===e){let e="by trade ";o.trade_species&&(e+="for "+o.trade_species.name),o.held_item&&(e+="holding "+o.held_item.name),a.push(e)}"shed"===e&&a.push("by shedding")}return e.evolution_details[0].location?"On locations: "+a.join(", "):"Evolves "+a.join(", ")},i=(e,a)=>{0!==a.evolves_to.length&&a.evolves_to.forEach((a=>{let o=a.species.url.split("/");e.push({name:a.species.name,id:o[o.length-2],details:r(a)}),i(e,a)}))},t=async({species:e})=>{try{const a=[],o=e.url,r=await axios.get(o);let t=(await axios.get(r.data.evolution_chain.url)).data.chain,n=t.species.url.split("/");return a.push({name:t.species.name,id:n[n.length-2]}),i(a,t),a}catch(e){if(e instanceof TypeError)return[];console.log(e)}},n=async({moves:e})=>{const a=e.filter((e=>"level-up"===e.version_group_details[0].move_learn_method.name));a.sort(((e,a)=>e.version_group_details[0].level_learned_at-a.version_group_details[0].level_learned_at));const o=a.map((e=>e.move.url)).map((e=>axios.get(e)));return(await Promise.all(o)).map(((e,o)=>{let r=e.data;return{name:r.name,power:r.power,pp:r.pp,type:r.type.name,accuracy:r.accuracy,level_learned_at:a[o].version_group_details[0].level_learned_at}}))},s=e=>parseInt(e)>=1&&parseInt(e)<=893,l=async e=>{try{const o=document.querySelector(".spinner"),r=await(async(e,o)=>{try{return o in a.pokeMap&&(o=a.pokeMap[o]),(await axios.get(`https://pokeapi.co/api/v2/pokemon/${o}/`)).data}catch{console.log("Error fetching data from pokeAPI")}})(0,e);o.classList.remove("is-hidden");const i=await(async e=>{try{const o=e.types.map((e=>`${e.type.name} ${a.pokeTypes[e.type.name]}`)).join(", "),r=(e=>{const a=e.sprites.versions,o=Object.keys(a);for(let e of o){let o=a[e];for(let a of Object.keys(o))if(o[a].front_default)return e}})(e),[i,s]=await Promise.all([t(e),n(e)]);return{...e,typesStr:o,genStr:r,evosArray:i,movesArray:s}}catch(e){console.log(e)}})(r);c("pokemon",i),o.classList.add("is-hidden")}catch(e){console.log(e)}},c=(e,a)=>{try{const e=document.querySelector(".poke-box"),o=document.querySelector(".search-box__input");e.classList.remove("is-hidden"),e.innerHTML="",e.append(u(a)),e.innerHTML+='<div class="poke-box__extras">\n            <div class="poke-box__evo-box">\n                <h3 class="heading-tertiary">Evolutions:</h3>\n                <div class="poke-box__evo-list">\n                </div>\n                <p>Click on a card to search that pokémon</p>\n            </div>\n            <div class="poke-box__moves-box">\n                <h3 class="heading-tertiary u-margin-bottom-medium">Moves:</h3>\n                <ul class="poke-box__moves-list">\n                </ul>\n                <p>*Moves eligble via leveling up only</p>\n            </div>\n        </div>',h(e,o,a),g(e,a)}catch(e){console.log("ERROR RENDERING"),console.log(e)}},u=e=>{const a=document.createElement("article");a.classList.add("poke-box__dashboard");const o=d(e.id);a.append(o);const r=p(e);a.append(r);const i=m(e);return a.append(i),a},d=e=>{const a=document.createElement("div");return a.classList.add("poke-box__img-box"),a.innerHTML=`<img src="https://pokeres.bastionbot.org/images/pokemon/${e}.png" alt="pokemon Image~!"\n    onError="this.onerror=null;src='/public/img/favicon.png';">`,a},p=e=>{const a=document.createElement("div");return a.classList.add("poke-box__header"),a.innerHTML=`<span class="heading-sub">#${e.id}</span> <h2 class="heading-secondary"> ${e.name}</h2>\n    <h4 class="heading-sub">Types : ${e.typesStr}  </h4>\n    <h4 class="heading-sub">First Apperance : ${e.genStr}</h4>`,a},m=e=>{const a=document.createElement("div");return a.classList.add("poke-box__base-stats"),a.innerHTML=`<h3 class="heading-tertiary u-margin-bottom-small">Base Stats:</h3>\n    <ul>\n        <li>HP: ${e.stats[0].base_stat}</li>\n        <li>Attack: ${e.stats[1].base_stat}</li>\n        <li>Defense: ${e.stats[2].base_stat}</li>\n        <li>Special Attack: ${e.stats[3].base_stat}</li>\n        <li>Special Defense: ${e.stats[4].base_stat}</li>\n        <li>Speed: ${e.stats[5].base_stat}</li>\n        <li>Height: ${e.height}</li>\n        <li>Weight: ${e.weight}</li>\n    </ul>`,a},h=(e,a,o)=>{const r=e.querySelector(".poke-box__evo-list");for(let e of o.evosArray){let o=document.createElement("article");o.classList.add("evo-card"),o.dataset.id=e.id,o.innerHTML=`\n        <header class="evo-card__evo-header">\n            <p class="evo-id" data-id="${e.id}">#${e.id}</p>\n            <h4 class="evo-card__evo-title" data-id="${e.id}">${e.name}</h4>\n        </header>\n        <div class="evo-card__img-box">\n            <img src="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${e.id}.png" alt="pokemon Image" data-id="${e.id}">\n        </div>\n        <footer class="evo-card__details data-id="${e.id}">\n        <p>${e.details?e.details:""}</p>\n        </footer>\n        `,o.addEventListener("click",(e=>{a.value=e.target.dataset.id,l(e.target.dataset.id)})),r.append(o)}},g=(e,o)=>{const r=document.querySelector(".poke-box__moves-list");for(let e of o.movesArray){const o=document.createElement("li");o.classList.add("poke-box__moves-item"),o.innerHTML=`${a.pokeTypes[e.type]} ${e.name.capitalize()} PWR:${e.power||"-"} PP:${e.power||"-"} \n\n         &nbsp; ${e.level_learned_at<=1?"(BASE)":`(LVL${e.level_learned_at})`}`,r.append(o)}};String.prototype.capitalize=function(){return this.charAt(0).toUpperCase()+this.slice(1)};const b=a=>{const o=document.querySelector(".dropdown-menu"),r=document.querySelector(".search-box__input");r.setCustomValidity("");let i=a.target.value.toLowerCase().trim();if(s(i))return o.classList.remove("is-active"),void l(i);if(!isNaN(i)&&""!==i)return o.classList.remove("is-active"),void r.setCustomValidity("Invalid ID number");if(""===i)return void o.classList.remove("is-active");const t=e.pokeTrie.find(""+i.toLowerCase());if(0===t.length)return o.classList.remove("is-active"),void r.setCustomValidity("Invalid pokémon name");o.innerHTML="",o.classList.add("is-active");for(let e of t){const a=document.createElement("li");a.classList.add("dropdown-item"),a.innerHTML=`<a href="#section-results">${e.capitalize()}</a>`,a.addEventListener("click",(a=>{o.classList.remove("is-active"),r.value=e.capitalize(),"farfetch'd"===e&&(e="farfetchd"),l(e)})),o.append(a)}},k=document.querySelector(".search-box__input-box"),y=document.querySelector(".search-box__clear-btn"),f=document.querySelector(".dropdown-menu");document.addEventListener("click",(e=>{k.contains(e.target)||f.classList.remove("is-active")}));const v=document.querySelector(".search-box__input");v.addEventListener("input",((e,a=500)=>{let o;return(...r)=>{o&&clearTimeout(o),o=setTimeout((()=>{e.apply(null,r)}),a)}})(b,500)),v.addEventListener("focus",(e=>{""===e.target.value||s(e.target.value)||b(e)})),y.addEventListener("click",(()=>{v.value="",f.classList.remove("is-active")}))})()})();